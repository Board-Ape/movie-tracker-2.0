// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`signin component tests should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignIn
    signInToApp={[Function]}
    signUpForApp={[Function]}
    userObject={
        Object {
            "error": false,
            "signedIn": false,
            "userData": Object {
              "email": "123",
              "id": 2,
              "name": "123",
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        className="in"
        onSubmit={[Function]}
>
        <Link
                className="sign-in-close"
                replace={false}
                to="/"
        >
                Close
        </Link>
        <input
                className="signin-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                placeholder="Username (email)"
                type="text"
                value=""
        />
        <input
                className="signin-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                placeholder="Password (case sensitive)"
                type="password"
                value=""
        />
        <div
                className="password-show-hide"
        >
                <div
                        className="type-toggle in"
                >
                        <button
                                className="in"
                                onClick={[Function]}
                                tabIndex="-1"
                        >
                                Sign Up Instead
                        </button>
                </div>
                <label
                        htmlFor="password-option"
                >
                        Show Password?
                </label>
                <input
                        id="password-option"
                        name="passOption"
                        onChange={[Function]}
                        tabIndex="-1"
                        type="checkbox"
                        value="text"
                />
        </div>
        <input
                type="submit"
                value="Sign In!"
        />
</form>,
      "className": "SignIn",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            className="sign-in-close"
            replace={false}
            to="/"
>
            Close
</Link>,
          null,
          null,
          null,
          <input
            className="signin-input"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder="Username (email)"
            type="text"
            value=""
/>,
          <input
            className="signin-input"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder="Password (case sensitive)"
            type="password"
            value=""
/>,
          <div
            className="password-show-hide"
>
            <div
                        className="type-toggle in"
            >
                        <button
                                    className="in"
                                    onClick={[Function]}
                                    tabIndex="-1"
                        >
                                    Sign Up Instead
                        </button>
            </div>
            <label
                        htmlFor="password-option"
            >
                        Show Password?
            </label>
            <input
                        id="password-option"
                        name="passOption"
                        onChange={[Function]}
                        tabIndex="-1"
                        type="checkbox"
                        value="text"
            />
</div>,
          <input
            type="submit"
            value="Sign In!"
/>,
        ],
        "className": "in",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Close",
            "className": "sign-in-close",
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": "Close",
          "type": [Function],
        },
        null,
        null,
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "signin-input",
            "onBlur": [Function],
            "onChange": [Function],
            "onFocus": [Function],
            "placeholder": "Username (email)",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "signin-input",
            "onBlur": [Function],
            "onChange": [Function],
            "onFocus": [Function],
            "placeholder": "Password (case sensitive)",
            "type": "password",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="type-toggle in"
>
                <button
                                className="in"
                                onClick={[Function]}
                                tabIndex="-1"
                >
                                Sign Up Instead
                </button>
</div>,
              <label
                htmlFor="password-option"
>
                Show Password?
</label>,
              <input
                id="password-option"
                name="passOption"
                onChange={[Function]}
                tabIndex="-1"
                type="checkbox"
                value="text"
/>,
            ],
            "className": "password-show-hide",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <button
                  className="in"
                  onClick={[Function]}
                  tabIndex="-1"
>
                  Sign Up Instead
</button>,
                "className": "type-toggle in",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Sign Up Instead",
                  "className": "in",
                  "onClick": [Function],
                  "tabIndex": "-1",
                },
                "ref": null,
                "rendered": "Sign Up Instead",
                "type": "button",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Show Password?",
                "htmlFor": "password-option",
              },
              "ref": null,
              "rendered": "Show Password?",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "password-option",
                "name": "passOption",
                "onChange": [Function],
                "tabIndex": "-1",
                "type": "checkbox",
                "value": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "type": "submit",
            "value": "Sign In!",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          className="in"
          onSubmit={[Function]}
>
          <Link
                    className="sign-in-close"
                    replace={false}
                    to="/"
          >
                    Close
          </Link>
          <input
                    className="signin-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    placeholder="Username (email)"
                    type="text"
                    value=""
          />
          <input
                    className="signin-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    placeholder="Password (case sensitive)"
                    type="password"
                    value=""
          />
          <div
                    className="password-show-hide"
          >
                    <div
                              className="type-toggle in"
                    >
                              <button
                                        className="in"
                                        onClick={[Function]}
                                        tabIndex="-1"
                              >
                                        Sign Up Instead
                              </button>
                    </div>
                    <label
                              htmlFor="password-option"
                    >
                              Show Password?
                    </label>
                    <input
                              id="password-option"
                              name="passOption"
                              onChange={[Function]}
                              tabIndex="-1"
                              type="checkbox"
                              value="text"
                    />
          </div>
          <input
                    type="submit"
                    value="Sign In!"
          />
</form>,
        "className": "SignIn",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Link
              className="sign-in-close"
              replace={false}
              to="/"
>
              Close
</Link>,
            null,
            null,
            null,
            <input
              className="signin-input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="Username (email)"
              type="text"
              value=""
/>,
            <input
              className="signin-input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="Password (case sensitive)"
              type="password"
              value=""
/>,
            <div
              className="password-show-hide"
>
              <div
                            className="type-toggle in"
              >
                            <button
                                          className="in"
                                          onClick={[Function]}
                                          tabIndex="-1"
                            >
                                          Sign Up Instead
                            </button>
              </div>
              <label
                            htmlFor="password-option"
              >
                            Show Password?
              </label>
              <input
                            id="password-option"
                            name="passOption"
                            onChange={[Function]}
                            tabIndex="-1"
                            type="checkbox"
                            value="text"
              />
</div>,
            <input
              type="submit"
              value="Sign In!"
/>,
          ],
          "className": "in",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Close",
              "className": "sign-in-close",
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": "Close",
            "type": [Function],
          },
          null,
          null,
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "signin-input",
              "onBlur": [Function],
              "onChange": [Function],
              "onFocus": [Function],
              "placeholder": "Username (email)",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "signin-input",
              "onBlur": [Function],
              "onChange": [Function],
              "onFocus": [Function],
              "placeholder": "Password (case sensitive)",
              "type": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="type-toggle in"
>
                  <button
                                    className="in"
                                    onClick={[Function]}
                                    tabIndex="-1"
                  >
                                    Sign Up Instead
                  </button>
</div>,
                <label
                  htmlFor="password-option"
>
                  Show Password?
</label>,
                <input
                  id="password-option"
                  name="passOption"
                  onChange={[Function]}
                  tabIndex="-1"
                  type="checkbox"
                  value="text"
/>,
              ],
              "className": "password-show-hide",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <button
                    className="in"
                    onClick={[Function]}
                    tabIndex="-1"
>
                    Sign Up Instead
</button>,
                  "className": "type-toggle in",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Sign Up Instead",
                    "className": "in",
                    "onClick": [Function],
                    "tabIndex": "-1",
                  },
                  "ref": null,
                  "rendered": "Sign Up Instead",
                  "type": "button",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Show Password?",
                  "htmlFor": "password-option",
                },
                "ref": null,
                "rendered": "Show Password?",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "password-option",
                  "name": "passOption",
                  "onChange": [Function],
                  "tabIndex": "-1",
                  "type": "checkbox",
                  "value": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "type": "submit",
              "value": "Sign In!",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
